var n=Object.assign,l=(m,t,e)=>new Promise((r,s)=>{var a=o=>{try{i(e.next(o))}catch(d){s(d)}},p=o=>{try{i(e.throw(o))}catch(d){s(d)}},i=o=>o.done?r(o.value):Promise.resolve(o.value).then(a,p);i((e=e.apply(m,t)).next())});import{getLocalStorage as c,renderListWithTemplate as y,setLocalStorage as u}from"./utils.js";export default class h{constructor(t,e,r){this.category=t,this.productData=e,this.listElement=r,this.products={}}init(t){return l(this,null,function*(){this.renderList(this.products,t,this.listElement)})}getCartContents(){const t=c("so-cart");if(t==null)return;const e=t.map(r=>this.renderList(r));document.querySelector(".product-list").innerHTML=e.join("")}filterProducts(t,e){return l(this,null,function*(){return t.filter(r=>e(r))})}prepareTemplate(t,e){}renderList(t,e,r){const s=document.querySelector(e);y(s,r,t,this.prepareTemplate)}removeItem(t){t.preventDefault();const e=t.target.dataset.id;if(c("so-cart")!==null){const r=c("so-cart"),s=r.filter(a=>a.Id!==e);u("so-cart",s),window.location.reload()}}addQuantity(t){const e=t.target.dataset.id,r=c("so-cart"),s=r.map(a=>a.Id===e?n(n({},a),{quantity:a.quantity+1}):a);u("so-cart",s),window.location.reload()}removeQuantity(t){const e=t.target.dataset.id,r=c("so-cart"),s=r.map(a=>a.Id===e?n(n({},a),{quantity:a.quantity-1}):a);u("so-cart",s),window.location.reload()}}
